@model MvcBookStore.Models.DONDATHANG

@{
    ViewBag.Title = "Suadonhang";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<html>
<head>
    <style>
        :root {
            --primary: #4f46e5;
            --primary-dark: #4338ca;
            --success: #059669;
            --danger: #dc2626;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-300: #d1d5db;
            --gray-600: #4b5563;
            --gray-700: #374151;
            --gray-800: #1f2937;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            background-color: var(--gray-50);
            color: var(--gray-800);
            line-height: 1.5;
        }

        .container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 1.5rem;
        }

        .page-header {
            background-color: white;
            padding: 1.5rem 2rem;
            border-radius: 1rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .page-title {
            font-size: 1.875rem;
            font-weight: 700;
            color: var(--gray-800);
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

            .page-title::before {
                content: "📦";
                font-size: 2rem;
            }

        .details-container {
            background: white;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        .details-grid {
            display: grid;
            grid-template-columns: auto 1fr;
            gap: 1.5rem 2rem;
            align-items: start;
        }

        .detail-label {
            font-weight: 600;
            color: var(--gray-700);
            min-width: 150px;
        }

        .detail-value {
            color: var(--gray-800);
        }

        .book-cover {
            width: 200px;
            height: 280px;
            object-fit: cover;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s;
        }

            .book-cover:hover {
                transform: scale(1.05);
            }

        .price {
            font-weight: 600;
            color: var(--success);
            font-size: 1.25rem;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid var(--gray-200);
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 500;
            text-decoration: none;
            transition: all 0.2s;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

            .btn:hover {
                transform: translateY(-1px);
            }

        .btn-back {
            background-color: var(--gray-100);
            color: var(--gray-700);
        }

            .btn-back:hover {
                background-color: var(--gray-200);
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="page-header">
            <h2 class="page-title">Sửa đơn hàng</h2>
        </div>

        @using (Html.BeginForm("SuaDonHang", "Admin", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.MaDonHang)
            <div class="details-container">
                <div class="details-grid">
                    <div class="detail-label">Mã Đơn Hàng</div>
                    <div class="detail-value">@Html.DisplayFor(model => model.MaDonHang)</div>

                    <div class="detail-label">Khách Hàng</div>
                    <div class="detail-value">@Html.DisplayFor(model => model.KHACHHANG.HoTen)</div>

                    <div class="detail-label">Ngày Đặt</div>
                    <div class="detail-value">@Html.DisplayFor(model => model.Ngaydat)</div>

                    <div class="detail-label">Ngày Giao</div>
                    <div class="detail-value">
                        @Html.TextBoxFor(model => model.Ngaygiao, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    </div>

                    <div class="detail-label">Tình Trạng Thanh Toán</div>
                    <div class="detail-value">
                        @Html.DropDownListFor(model => model.Dathanhtoan, new SelectList(new[] {
                            new { Value = "true", Text = "Đã thanh toán" },
                            new { Value = "false", Text = "Chưa thanh toán" }
                        }, "Value", "Text"), "Chọn trạng thái", new { @class = "form-control" })
                    </div>

                    <div class="detail-label">Tình Trạng Giao Hàng</div>
                    <div class="detail-value">
                        @Html.DropDownListFor(model => model.Tinhtranggiaohang, new SelectList(new[] {
                            new { Value = "true", Text = "Đã giao" },
                            new { Value = "false", Text = "Chưa giao" }
                        }, "Value", "Text"), "Chọn trạng thái", new { @class = "form-control" })
                    </div>
                </div>

                <div class="action-buttons">
                    <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                    @Html.ActionLink("← Quay lại", "DonHang", null, new { @class = "btn btn-back" })
                </div>
            </div>
        }
    </div>
</body>
</html>